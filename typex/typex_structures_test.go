package typex_test

import (
	"reflect"
	"testing"

	"github.com/xoctopus/x/typex/testdata"
)

func TestTypes_Structures(t *testing.T) {
	cases := []Case{
		{
			"SimpleStruct",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "SimpleStruct",
				String:        "github.com/xoctopus/x/typex/testdata.SimpleStruct",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      6,
				Fields: []FieldAssertion{
					{
						Name: "A",
						Type: "string",
					},
					{
						Name: "B",
						Type: "github.com/xoctopus/x/typex/testdata.String",
					},
					{
						Name:    "unexported",
						Type:    "interface {}",
						PkgPath: "github.com/xoctopus/x/typex/testdata",
					},
					{
						Name: "Name",
						Type: "fmt.Stringer",
					},
					{
						Name: "HasTag",
						Type: "github.com/xoctopus/x/typex/testdata.Int",
						Tag:  `tag:"tagKey,otherLabel"`,
					},
					{
						Name:      "EmptyInterface",
						Type:      "github.com/xoctopus/x/typex/testdata.EmptyInterface",
						Anonymous: true,
					},
				},
			},
		},
		{
			"SimpleStructPtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.SimpleStruct",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.SimpleStruct",
				NumField:      0,
			},
		},
		{
			"EmbedSimpleStruct",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "EmbedSimpleStruct",
				String:        "github.com/xoctopus/x/typex/testdata.EmbedSimpleStruct",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      2,
				Fields: []FieldAssertion{
					{
						Name:      "SimpleStruct",
						Type:      "github.com/xoctopus/x/typex/testdata.SimpleStruct",
						Anonymous: true,
					},
					{
						Name: "Name",
						Type: "string",
					},
				},
			},
		},
		{
			"EmbedSimpleStructPtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.EmbedSimpleStruct",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.EmbedSimpleStruct",
			},
		},
		{
			"EmbedInterface",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "EmbedInterface",
				String:        "github.com/xoctopus/x/typex/testdata.EmbedInterface",
				Kind:          reflect.Struct,
				Implements:    []bool{true, false, true, false, false, false},
				AssignableTo:  []bool{true, false, true, false, false, false},
				ConvertibleTo: []bool{true, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      1,
				Fields: []FieldAssertion{
					{
						Name:      "Stringer",
						Type:      "fmt.Stringer",
						Anonymous: true,
					},
				},
				NumMethod: 1,
				Methods: []MethodAssertion{
					{
						Name: "String",
						Type: "func(github.com/xoctopus/x/typex/testdata.EmbedInterface) string",
					},
				},
			},
		},
		{
			"EmbedInterfacePtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.EmbedInterface",
				Kind:          reflect.Pointer,
				Implements:    []bool{true, false, true, false, false, false},
				AssignableTo:  []bool{true, false, true, false, false, false},
				ConvertibleTo: []bool{true, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.EmbedInterface",
				NumMethod:     1,
				Methods: []MethodAssertion{
					{
						Name: "String",
						Type: "func(*github.com/xoctopus/x/typex/testdata.EmbedInterface) string",
					},
				},
			},
		},
		{
			"HasValReceiverMethods",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "HasValReceiverMethods",
				String:        "github.com/xoctopus/x/typex/testdata.HasValReceiverMethods",
				Kind:          reflect.Struct,
				Implements:    []bool{true, true, true, false, false, false},
				AssignableTo:  []bool{true, true, true, false, true, false},
				ConvertibleTo: []bool{true, true, true, false, true, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      0,
				NumMethod:     3,
				Methods: []MethodAssertion{
					{
						Name: "Bytes",
						Type: "func(github.com/xoctopus/x/typex/testdata.HasValReceiverMethods) []uint8",
					},
					{
						Name: "Name",
						Type: "func(github.com/xoctopus/x/typex/testdata.HasValReceiverMethods) string",
					},
					{
						Name: "String",
						Type: "func(github.com/xoctopus/x/typex/testdata.HasValReceiverMethods) string",
					},
				},
			},
		},
		{
			"HasValReceiverMethodsPtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.HasValReceiverMethods",
				Kind:          reflect.Pointer,
				Implements:    []bool{true, true, true, false, false, false},
				AssignableTo:  []bool{true, true, true, false, false, false},
				ConvertibleTo: []bool{true, true, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.HasValReceiverMethods",
				NumField:      0,
				NumMethod:     3,
				Methods: []MethodAssertion{
					{
						Name: "Bytes",
						Type: "func(*github.com/xoctopus/x/typex/testdata.HasValReceiverMethods) []uint8",
					},
					{
						Name: "Name",
						Type: "func(*github.com/xoctopus/x/typex/testdata.HasValReceiverMethods) string",
					},
					{
						Name: "String",
						Type: "func(*github.com/xoctopus/x/typex/testdata.HasValReceiverMethods) string",
					},
				},
			},
		},
		{
			"HasPtrReceiverMethods",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "HasPtrReceiverMethods",
				String:        "github.com/xoctopus/x/typex/testdata.HasPtrReceiverMethods",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      1,
				Fields: []FieldAssertion{
					{
						Name:      "SimpleStruct",
						Type:      "github.com/xoctopus/x/typex/testdata.SimpleStruct",
						Anonymous: true,
					},
				},
				NumMethod: 0,
			},
		},
		{
			"HasPtrReceiverMethodsPtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.HasPtrReceiverMethods",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.HasPtrReceiverMethods",
				NumField:      0,
				NumMethod:     3,
				Methods: []MethodAssertion{
					{
						Name: "SetA",
						Type: "func(*github.com/xoctopus/x/typex/testdata.HasPtrReceiverMethods, string)",
					},
					{
						Name: "SetB",
						Type: "func(*github.com/xoctopus/x/typex/testdata.HasPtrReceiverMethods, github.com/xoctopus/x/typex/testdata.String)",
					},
					{
						Name: "UnmarshalText",
						Type: "func(*github.com/xoctopus/x/typex/testdata.HasPtrReceiverMethods, []uint8) error",
					},
				},
			},
		},
		{
			"HasValAndPtrReceiverMethods",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "HasValAndPtrReceiverMethods",
				String:        "github.com/xoctopus/x/typex/testdata.HasValAndPtrReceiverMethods",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      1,
				Fields: []FieldAssertion{
					{
						PkgPath: "github.com/xoctopus/x/typex/testdata",
						Name:    "some",
						Type:    "interface {}",
					},
				},
				NumMethod: 1,
				Methods: []MethodAssertion{
					{
						Name: "MarshalText",
						Type: "func(github.com/xoctopus/x/typex/testdata.HasValAndPtrReceiverMethods) ([]uint8, error)",
					},
				},
			},
		},
		{
			"HasValAndPtrReceiverMethodsPtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.HasValAndPtrReceiverMethods",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.HasValAndPtrReceiverMethods",
				NumMethod:     2,
				Methods: []MethodAssertion{
					{
						Name: "MarshalText",
						Type: "func(*github.com/xoctopus/x/typex/testdata.HasValAndPtrReceiverMethods) ([]uint8, error)",
					},
					{
						Name: "UnmarshalText",
						Type: "func(*github.com/xoctopus/x/typex/testdata.HasValAndPtrReceiverMethods, []uint8) error",
					},
				},
			},
		},
		{
			"EmbedFieldOverwritten1",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "EmbedFieldOverwritten1",
				String:        "github.com/xoctopus/x/typex/testdata.EmbedFieldOverwritten1",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      2,
				Fields: []FieldAssertion{
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameField",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameField",
						Anonymous: true,
					},
					{
						Name: "Name",
						Type: "string",
					},
				},
				NumMethod: 0,
			},
		},
		{
			"EmbedFieldOverwritten1Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.EmbedFieldOverwritten1",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.EmbedFieldOverwritten1",
			},
		},
		{
			"EmbedFieldOverwritten2",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "EmbedFieldOverwritten2",
				String:        "github.com/xoctopus/x/typex/testdata.EmbedFieldOverwritten2",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      2,
				Fields: []FieldAssertion{
					{
						Name: "Name",
						Type: "string",
					},
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameField",
						Type:      "*github.com/xoctopus/x/typex/testdata.hasNameField",
						Anonymous: true,
					},
				},
				NumMethod: 0,
			},
		},
		{
			"EmbedFieldOverwritten2Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.EmbedFieldOverwritten2",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.EmbedFieldOverwritten2",
			},
		},
		{
			"EmbedFieldOverwritten3",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "EmbedFieldOverwritten3",
				String:        "github.com/xoctopus/x/typex/testdata.EmbedFieldOverwritten3",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      1,
				Fields: []FieldAssertion{
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameField",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameField",
						Anonymous: true,
					},
				},
				NumMethod: 1,
				Methods: []MethodAssertion{
					{
						Name: "Name",
						Type: "func(github.com/xoctopus/x/typex/testdata.EmbedFieldOverwritten3) github.com/xoctopus/x/typex/testdata.String",
					},
				},
			},
		},
		{
			"EmbedFieldOverwritten3Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.EmbedFieldOverwritten3",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.EmbedFieldOverwritten3",
				NumMethod:     1,
				Methods: []MethodAssertion{
					{
						Name: "Name",
						Type: "func(*github.com/xoctopus/x/typex/testdata.EmbedFieldOverwritten3) github.com/xoctopus/x/typex/testdata.String",
					},
				},
			},
		},
		{
			"InheritedMethodOverwritten1",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "InheritedMethodOverwritten1",
				String:        "github.com/xoctopus/x/typex/testdata.InheritedMethodOverwritten1",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      2,
				Fields: []FieldAssertion{
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameMethod",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameMethod",
						Anonymous: true,
					},
					{
						Name: "Name",
						Type: "string",
					},
				},
				NumMethod: 0,
			},
		},
		{
			"InheritedMethodOverwritten1Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.InheritedMethodOverwritten1",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.InheritedMethodOverwritten1",
			},
		},
		{
			"InheritedMethodOverwritten2",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "InheritedMethodOverwritten2",
				String:        "github.com/xoctopus/x/typex/testdata.InheritedMethodOverwritten2",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      2,
				Fields: []FieldAssertion{
					{
						Name: "Name",
						Type: "github.com/xoctopus/x/typex/testdata.String",
					},
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameMethod",
						Type:      "*github.com/xoctopus/x/typex/testdata.hasNameMethod",
						Anonymous: true,
					},
				},
				NumMethod: 0,
			},
		},
		{
			"InheritedMethodOverwritten2Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.InheritedMethodOverwritten2",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.InheritedMethodOverwritten2",
			},
		},
		{
			"InheritedMethodOverwritten3",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "InheritedMethodOverwritten3",
				String:        "github.com/xoctopus/x/typex/testdata.InheritedMethodOverwritten3",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      2,
				Fields: []FieldAssertion{
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNamePtrMethod",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNamePtrMethod",
						Anonymous: true,
					},
					{
						Name: "Name",
						Type: "github.com/xoctopus/x/typex/testdata.Int",
					},
				},
				NumMethod: 0,
			},
		},
		{
			"InheritedMethodOverwritten3Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.InheritedMethodOverwritten3",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.InheritedMethodOverwritten3",
			},
		},
		{
			"InheritedMethodOverwritten4",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "InheritedMethodOverwritten4",
				String:        "github.com/xoctopus/x/typex/testdata.InheritedMethodOverwritten4",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      1,
				Fields: []FieldAssertion{
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNamePtrMethod",
						Type:      "*github.com/xoctopus/x/typex/testdata.hasNamePtrMethod",
						Anonymous: true,
					},
				},
				NumMethod: 1,
				Methods: []MethodAssertion{
					{
						Name: "Name",
						Type: "func(github.com/xoctopus/x/typex/testdata.InheritedMethodOverwritten4) github.com/xoctopus/x/typex/testdata.Int",
					},
				},
			},
		},
		{
			"InheritedMethodOverwritten4Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.InheritedMethodOverwritten4",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.InheritedMethodOverwritten4",
				NumMethod:     1,
				Methods: []MethodAssertion{
					{
						Name: "Name",
						Type: "func(*github.com/xoctopus/x/typex/testdata.InheritedMethodOverwritten4) github.com/xoctopus/x/typex/testdata.Int",
					},
				},
			},
		},
		{
			"InheritedMethodOverwritten5",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "InheritedMethodOverwritten5",
				String:        "github.com/xoctopus/x/typex/testdata.InheritedMethodOverwritten5",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      1,
				Fields: []FieldAssertion{
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNamePtrMethod",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNamePtrMethod",
						Anonymous: true,
					},
				},
			},
		},
		{
			"InheritedMethodOverwritten5Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.InheritedMethodOverwritten5",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.InheritedMethodOverwritten5",
				NumField:      0,
				NumMethod:     1,
				Methods: []MethodAssertion{
					{
						Name: "Name",
						Type: "func(*github.com/xoctopus/x/typex/testdata.InheritedMethodOverwritten5) float32",
					},
				},
			},
		},
		{
			"EmbedFieldAndMethodConflict",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "EmbedFieldAndMethodConflict",
				String:        "github.com/xoctopus/x/typex/testdata.EmbedFieldAndMethodConflict",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      2,
				Fields: []FieldAssertion{
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameField",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameField",
						Anonymous: true,
					},
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameMethod",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameMethod",
						Anonymous: true,
					},
				},
				NumMethod: 0,
			},
		},
		{
			"EmbedFieldAndMethodConflictPtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.EmbedFieldAndMethodConflict",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.EmbedFieldAndMethodConflict",
			},
		},
		{
			"EmbedFieldsConflict1",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "EmbedFieldsConflict1",
				String:        "github.com/xoctopus/x/typex/testdata.EmbedFieldsConflict1",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      2,
				Fields: []FieldAssertion{
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameField",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameField",
						Anonymous: true,
					},
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameField2",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameField2",
						Anonymous: true,
					},
				},
				NumMethod: 0,
			},
		},
		{
			"EmbedFieldsConflict1Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.EmbedFieldsConflict1",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.EmbedFieldsConflict1",
			},
		},
		{
			"EmbedFieldsConflict2",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "EmbedFieldsConflict2",
				String:        "github.com/xoctopus/x/typex/testdata.EmbedFieldsConflict2",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      2,
				Fields: []FieldAssertion{
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameField",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameField",
						Anonymous: true,
					},
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameField2",
						Type:      "*github.com/xoctopus/x/typex/testdata.hasNameField2",
						Anonymous: true,
					},
				},
				NumMethod: 0,
			},
		},
		{
			"EmbedFieldsConflict2Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.EmbedFieldsConflict2",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.EmbedFieldsConflict2",
			},
		},
		{
			"InheritedMethodsConflict1",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "InheritedMethodsConflict1",
				String:        "github.com/xoctopus/x/typex/testdata.InheritedMethodsConflict1",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      2,
				Fields: []FieldAssertion{
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameMethod",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameMethod",
						Anonymous: true,
					},
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNamePtrMethod",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNamePtrMethod",
						Anonymous: true,
					},
				},
				NumMethod: 0,
			},
		},
		{
			"InheritedMethodsConflict1Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.InheritedMethodsConflict1",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.InheritedMethodsConflict1",
			},
		},
		{
			"InheritedMethodsConflict2",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "InheritedMethodsConflict2",
				String:        "github.com/xoctopus/x/typex/testdata.InheritedMethodsConflict2",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      2,
				Fields: []FieldAssertion{
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameMethod",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameMethod",
						Anonymous: true,
					},
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNamePtrMethod",
						Type:      "*github.com/xoctopus/x/typex/testdata.hasNamePtrMethod",
						Anonymous: true,
					},
				},
				NumMethod: 0,
			},
		},
		{
			"InheritedMethodsConflict2Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.InheritedMethodsConflict2",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.InheritedMethodsConflict2",
			},
		},
		{
			"InheritedMethodsConflict3",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "InheritedMethodsConflict3",
				String:        "github.com/xoctopus/x/typex/testdata.InheritedMethodsConflict3",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      2,
				Fields: []FieldAssertion{
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameMethod",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameMethod",
						Anonymous: true,
					},
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameMethod2",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameMethod2",
						Anonymous: true,
					},
				},
				NumMethod: 0,
			},
		},
		{
			"InheritedMethodsConflict3Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.InheritedMethodsConflict3",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.InheritedMethodsConflict3",
			},
		},
		{
			"InheritedMethodsConflict4",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "InheritedMethodsConflict4",
				String:        "github.com/xoctopus/x/typex/testdata.InheritedMethodsConflict4",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      2,
				Fields: []FieldAssertion{
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameMethod",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameMethod",
						Anonymous: true,
					},
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNamePtrMethod",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNamePtrMethod",
						Anonymous: true,
					},
				},
			},
		},
		{
			"InheritedMethodsConflict4Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.InheritedMethodsConflict4",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.InheritedMethodsConflict4",
				NumField:      0,
				NumMethod:     0,
			},
		},
		{
			"InheritedMethodsConflict5",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "InheritedMethodsConflict5",
				String:        "github.com/xoctopus/x/typex/testdata.InheritedMethodsConflict5",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      2,
				Fields: []FieldAssertion{
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameMethod",
						Type:      "*github.com/xoctopus/x/typex/testdata.hasNameMethod",
						Anonymous: true,
					},
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNamePtrMethod",
						Type:      "*github.com/xoctopus/x/typex/testdata.hasNamePtrMethod",
						Anonymous: true,
					},
				},
				NumMethod: 0,
			},
		},
		{
			"InheritedMethodsConflict5Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.InheritedMethodsConflict5",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.InheritedMethodsConflict5",
			},
		},
		{
			"InheritedMethodsConflict6",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "InheritedMethodsConflict6",
				String:        "github.com/xoctopus/x/typex/testdata.InheritedMethodsConflict6",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      2,
				Fields: []FieldAssertion{
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameMethod",
						Type:      "*github.com/xoctopus/x/typex/testdata.hasNameMethod",
						Anonymous: true,
					},
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNamePtrMethod",
						Type:      "*github.com/xoctopus/x/typex/testdata.hasNamePtrMethod",
						Anonymous: true,
					},
				},
			},
		},
		{
			"InheritedMethodsConflict6Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.InheritedMethodsConflict6",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.InheritedMethodsConflict6",
				NumMethod:     1,
				Methods: []MethodAssertion{
					{
						Name: "Name",
						Type: "func(*github.com/xoctopus/x/typex/testdata.InheritedMethodsConflict6) interface {}",
					},
				},
			},
		},
		{
			"InheritedMethodAndFieldsConflict1",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "InheritedMethodAndFieldsConflict1",
				String:        "github.com/xoctopus/x/typex/testdata.InheritedMethodAndFieldsConflict1",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      2,
				Fields: []FieldAssertion{
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameField",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameField",
						Anonymous: true,
					},
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameMethod",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameMethod",
						Anonymous: true,
					},
				},
			},
		},
		{
			"InheritedMethodAndFieldsConflict1Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.InheritedMethodAndFieldsConflict1",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.InheritedMethodAndFieldsConflict1",
			},
		},
		{
			"InheritedMethodAndFieldsConflict2",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "InheritedMethodAndFieldsConflict2",
				String:        "github.com/xoctopus/x/typex/testdata.InheritedMethodAndFieldsConflict2",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      2,
				Fields: []FieldAssertion{
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameField",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameField",
						Anonymous: true,
					},
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameMethod",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameMethod",
						Anonymous: true,
					},
				},
				NumMethod: 1,
				Methods: []MethodAssertion{
					{
						Name: "Name",
						Type: "func(github.com/xoctopus/x/typex/testdata.InheritedMethodAndFieldsConflict2) string",
					},
				},
			},
		},
		{
			"InheritedMethodAndFieldsConflict2Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.InheritedMethodAndFieldsConflict2",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.InheritedMethodAndFieldsConflict2",
				NumMethod:     1,
				Methods: []MethodAssertion{
					{
						Name: "Name",
						Type: "func(*github.com/xoctopus/x/typex/testdata.InheritedMethodAndFieldsConflict2) string",
					},
				},
			},
		},
		{
			"InheritedMethodAndFieldsConflict3",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "InheritedMethodAndFieldsConflict3",
				String:        "github.com/xoctopus/x/typex/testdata.InheritedMethodAndFieldsConflict3",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      3,
				Fields: []FieldAssertion{
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameField",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameField",
						Anonymous: true,
					},
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameMethod",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameMethod",
						Anonymous: true,
					},
					{
						Name: "Name",
						Type: "string",
					},
				},
			},
		},
		{
			"InheritedMethodAndFieldsConflict3Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.InheritedMethodAndFieldsConflict3",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.InheritedMethodAndFieldsConflict3",
			},
		},
		{
			"InheritedMethodAndFieldsConflict4",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "InheritedMethodAndFieldsConflict4",
				String:        "github.com/xoctopus/x/typex/testdata.InheritedMethodAndFieldsConflict4",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      3,
				Fields: []FieldAssertion{
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameField",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameField",
						Anonymous: true,
					},
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameField2",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameField2",
						Anonymous: true,
					},
					{
						PkgPath:   "github.com/xoctopus/x/typex/testdata",
						Name:      "hasNameMethod",
						Type:      "github.com/xoctopus/x/typex/testdata.hasNameMethod",
						Anonymous: true,
					},
				},
			},
		},
		{
			"InheritedMethodAndFieldsConflict4Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.InheritedMethodAndFieldsConflict4",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.InheritedMethodAndFieldsConflict4",
			},
		},
		{
			"HasUnexportedField",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "HasUnexportedField",
				String:        "github.com/xoctopus/x/typex/testdata.HasUnexportedField",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				Len:           0,
				NumField:      1,
				Fields: []FieldAssertion{
					{
						PkgPath: "github.com/xoctopus/x/typex/testdata",
						Name:    "str",
						Type:    "string",
					},
				},
			},
		},
		{
			"HasUnexportedFieldPtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.HasUnexportedField",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.HasUnexportedField",
			},
		},
		{
			"HasUnexportedMethod",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "HasUnexportedMethod",
				String:        "github.com/xoctopus/x/typex/testdata.HasUnexportedMethod",
				Kind:          reflect.Struct,
				Implements:    []bool{true, false, true, false, false, false},
				AssignableTo:  []bool{true, false, true, false, true, false},
				ConvertibleTo: []bool{true, false, true, false, true, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumMethod:     1,
				Methods: []MethodAssertion{
					{
						Name: "String",
						Type: "func(github.com/xoctopus/x/typex/testdata.HasUnexportedMethod) string",
					},
				},
			},
		},
		{
			"HasUnexportedMethodPtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.HasUnexportedMethod",
				Kind:          reflect.Pointer,
				Implements:    []bool{true, false, true, false, false, false},
				AssignableTo:  []bool{true, false, true, false, false, false},
				ConvertibleTo: []bool{true, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.HasUnexportedMethod",
				NumMethod:     1,
				Methods: []MethodAssertion{
					{
						Name: "String",
						Type: "func(*github.com/xoctopus/x/typex/testdata.HasUnexportedMethod) string",
					},
				},
			},
		},
		{
			"SerializedString",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "Serialized[string]",
				String:        "github.com/xoctopus/x/typex/testdata.Serialized[string]",
				Kind:          reflect.Struct,
				Implements:    []bool{true, true, true, false, false, false},
				AssignableTo:  []bool{true, true, true, false, false, false},
				ConvertibleTo: []bool{true, true, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      1,
				Fields: []FieldAssertion{
					{
						PkgPath: "github.com/xoctopus/x/typex/testdata",
						Name:    "data",
						Type:    "string",
					},
				},
				NumMethod: 3,
				Methods: []MethodAssertion{
					{
						Name: "Bytes",
						Type: "func(github.com/xoctopus/x/typex/testdata.Serialized[string]) []uint8",
					},
					{
						Name: "Data",
						Type: "func(github.com/xoctopus/x/typex/testdata.Serialized[string]) string",
					},
					{
						Name: "String",
						Type: "func(github.com/xoctopus/x/typex/testdata.Serialized[string]) string",
					},
				},
			},
		},
		{
			"SerializedStringPtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.Serialized[string]",
				Kind:          reflect.Pointer,
				Implements:    []bool{true, true, true, false, false, false},
				AssignableTo:  []bool{true, true, true, false, false, false},
				ConvertibleTo: []bool{true, true, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.Serialized[string]",
				NumMethod:     3,
				Methods: []MethodAssertion{
					{
						Name: "Bytes",
						Type: "func(*github.com/xoctopus/x/typex/testdata.Serialized[string]) []uint8",
					},
					{
						Name: "Data",
						Type: "func(*github.com/xoctopus/x/typex/testdata.Serialized[string]) string",
					},
					{
						Name: "String",
						Type: "func(*github.com/xoctopus/x/typex/testdata.Serialized[string]) string",
					},
				},
			},
		},
		{
			"SerializedBytes",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "Serialized[[]uint8]",
				String:        "github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]",
				Kind:          reflect.Struct,
				Implements:    []bool{true, true, true, false, false, false},
				AssignableTo:  []bool{true, true, true, false, false, false},
				ConvertibleTo: []bool{true, true, true, false, false, false},
				Comparable:    false,
				Key:           "nil",
				Elem:          "nil",
				NumField:      1,
				Fields: []FieldAssertion{
					{
						PkgPath: "github.com/xoctopus/x/typex/testdata",
						Name:    "data",
						Type:    "[]uint8",
					},
				},
				NumMethod: 3,
				Methods: []MethodAssertion{
					{
						Name: "Bytes",
						Type: "func(github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]) []uint8",
					},
					{
						Name: "Data",
						Type: "func(github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]) []uint8",
					},
					{
						Name: "String",
						Type: "func(github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]) string",
					},
				},
			},
		},
		{
			"SerializedBytesPtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]",
				Kind:          reflect.Pointer,
				Implements:    []bool{true, true, true, false, false, false},
				AssignableTo:  []bool{true, true, true, false, false, false},
				ConvertibleTo: []bool{true, true, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]",
				NumMethod:     3,
				Methods: []MethodAssertion{
					{
						Name: "Bytes",
						Type: "func(*github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]) []uint8",
					},
					{
						Name: "Data",
						Type: "func(*github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]) []uint8",
					},
					{
						Name: "String",
						Type: "func(*github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]) string",
					},
				},
			},
		},
		{
			"IntBTreeNode",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "BTreeNode[int]",
				String:        "github.com/xoctopus/x/typex/testdata.BTreeNode[int]",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      4,
				Fields: []FieldAssertion{
					{
						Name: "Value",
						Type: "int",
					},
					{
						Name: "Left",
						Type: "*github.com/xoctopus/x/typex/testdata.BTreeNode[int]",
					},
					{
						Name: "Right",
						Type: "*github.com/xoctopus/x/typex/testdata.BTreeNode[int]",
					},
					{
						Name: "Parent",
						Type: "*github.com/xoctopus/x/typex/testdata.BTreeNode[int]",
					},
				},
			},
		},
		{
			"IntBTreeNodePtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.BTreeNode[int]",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.BTreeNode[int]",
				NumField:      0,
				NumMethod:     1,
				Methods: []MethodAssertion{
					{
						Name: "InsertLeft",
						Type: "func(*github.com/xoctopus/x/typex/testdata.BTreeNode[int], int) *github.com/xoctopus/x/typex/testdata.BTreeNode[int]",
					},
				},
			},
		},
		{
			"SerializedBytesBTreeNode",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "BTreeNode[github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]]",
				String:        "github.com/xoctopus/x/typex/testdata.BTreeNode[github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]]",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    false,
				Key:           "nil",
				Elem:          "nil",
				NumField:      4,
				Fields: []FieldAssertion{
					{
						Name: "Value",
						Type: "github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]",
					},
					{
						Name: "Left",
						Type: "*github.com/xoctopus/x/typex/testdata.BTreeNode[github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]]",
					},
					{
						Name: "Right",
						Type: "*github.com/xoctopus/x/typex/testdata.BTreeNode[github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]]",
					},
					{
						Name: "Parent",
						Type: "*github.com/xoctopus/x/typex/testdata.BTreeNode[github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]]",
					},
				},
			},
		},
		{
			"SerializedBytesBTreeNodePtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.BTreeNode[github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]]",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.BTreeNode[github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]]",
				NumField:      0,
				NumMethod:     1,
				Methods: []MethodAssertion{
					{
						Name: "InsertLeft",
						Type: "func(*github.com/xoctopus/x/typex/testdata.BTreeNode[github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]], github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]) *github.com/xoctopus/x/typex/testdata.BTreeNode[github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]]",
					},
				},
			},
		},
		{
			"CircleEmbedsA",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "CircleEmbedsA",
				String:        "github.com/xoctopus/x/typex/testdata.CircleEmbedsA",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      1,
				Fields: []FieldAssertion{
					{
						Name:      "CircleEmbedsB",
						Type:      "github.com/xoctopus/x/typex/testdata.CircleEmbedsB",
						Anonymous: true,
					},
				},
			},
		},
		{
			"CircleEmbedsAPtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.CircleEmbedsA",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.CircleEmbedsA",
			},
		},
		{
			"CircleEmbedsB",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "CircleEmbedsB",
				String:        "github.com/xoctopus/x/typex/testdata.CircleEmbedsB",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      1,
				Fields: []FieldAssertion{
					{
						Name:      "CircleEmbedsC",
						Type:      "*github.com/xoctopus/x/typex/testdata.CircleEmbedsC",
						Anonymous: true,
					},
				},
			},
		},
		{
			"CircleEmbedsBPtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.CircleEmbedsB",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.CircleEmbedsB",
			},
		},
		{
			"CircleEmbedsC",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "CircleEmbedsC",
				String:        "github.com/xoctopus/x/typex/testdata.CircleEmbedsC",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      2,
				Fields: []FieldAssertion{
					{
						Name:      "CircleEmbedsA",
						Type:      "github.com/xoctopus/x/typex/testdata.CircleEmbedsA",
						Anonymous: true,
					},
					{
						Name:      "CircleEmbedsB",
						Type:      "github.com/xoctopus/x/typex/testdata.CircleEmbedsB",
						Anonymous: true,
					},
				},
			},
		},
		{
			"CircleEmbedsCPtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.CircleEmbedsC",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.CircleEmbedsC",
			},
		},
		{
			"TypeParamPass1",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "TypeParamPass[string,net.Addr]",
				String:        "github.com/xoctopus/x/typex/testdata.TypeParamPass[string,net.Addr]",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      3,
				Fields: []FieldAssertion{
					{
						PkgPath: "github.com/xoctopus/x/typex/testdata",
						Name:    "t1",
						Type:    "string",
					},
					{
						PkgPath: "github.com/xoctopus/x/typex/testdata",
						Name:    "t2",
						Type:    "net.Addr",
					},
					{
						Name:      "BTreeNode",
						Type:      "*github.com/xoctopus/x/typex/testdata.BTreeNode[net.Addr]",
						Anonymous: true,
					},
				},
				NumMethod: 1,
				Methods: []MethodAssertion{
					{
						Name: "InsertLeft",
						Type: "func(github.com/xoctopus/x/typex/testdata.TypeParamPass[string,net.Addr], net.Addr) *github.com/xoctopus/x/typex/testdata.BTreeNode[net.Addr]",
					},
				},
			},
		},
		{
			"TypeParamPass1Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.TypeParamPass[string,net.Addr]",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.TypeParamPass[string,net.Addr]",
				NumMethod:     2,
				Methods: []MethodAssertion{
					{
						Name: "Deal",
						Type: "func(*github.com/xoctopus/x/typex/testdata.TypeParamPass[string,net.Addr], string) net.Addr",
					},
					{
						Name: "InsertLeft",
						Type: "func(*github.com/xoctopus/x/typex/testdata.TypeParamPass[string,net.Addr], net.Addr) *github.com/xoctopus/x/typex/testdata.BTreeNode[net.Addr]",
					},
				},
			},
		},
		{
			"TypeParamPass2",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "TypeParamPass[github.com/xoctopus/x/typex/testdata.Serialized[string],github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]]",
				String:        "github.com/xoctopus/x/typex/testdata.TypeParamPass[github.com/xoctopus/x/typex/testdata.Serialized[string],github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]]",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    false,
				Key:           "nil",
				Elem:          "nil",
				NumField:      3,
				Fields: []FieldAssertion{
					{
						PkgPath: "github.com/xoctopus/x/typex/testdata",
						Name:    "t1",
						Type:    "github.com/xoctopus/x/typex/testdata.Serialized[string]",
					},
					{
						PkgPath: "github.com/xoctopus/x/typex/testdata",
						Name:    "t2",
						Type:    "github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]",
					},
					{
						PkgPath:   "",
						Name:      "BTreeNode",
						Type:      "*github.com/xoctopus/x/typex/testdata.BTreeNode[github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]]",
						Anonymous: true,
					},
				},
				NumMethod: 1,
				Methods: []MethodAssertion{
					{
						Name: "InsertLeft",
						Type: "func(github.com/xoctopus/x/typex/testdata.TypeParamPass[github.com/xoctopus/x/typex/testdata.Serialized[string],github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]], github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]) *github.com/xoctopus/x/typex/testdata.BTreeNode[github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]]",
					},
				},
			},
		},
		{
			"TypeParamPass2Ptr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.TypeParamPass[github.com/xoctopus/x/typex/testdata.Serialized[string],github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]]",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.TypeParamPass[github.com/xoctopus/x/typex/testdata.Serialized[string],github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]]",
				NumMethod:     2,
				Methods: []MethodAssertion{
					{
						Name: "Deal",
						Type: "func(*github.com/xoctopus/x/typex/testdata.TypeParamPass[github.com/xoctopus/x/typex/testdata.Serialized[string],github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]], github.com/xoctopus/x/typex/testdata.Serialized[string]) github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]",
					},
					{
						Name: "InsertLeft",
						Type: "func(*github.com/xoctopus/x/typex/testdata.TypeParamPass[github.com/xoctopus/x/typex/testdata.Serialized[string],github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]], github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]) *github.com/xoctopus/x/typex/testdata.BTreeNode[github.com/xoctopus/x/typex/testdata.Serialized[[]uint8]]",
					},
				},
			},
		},
		{
			"UncomparableStruct",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "UncomparableStruct",
				String:        "github.com/xoctopus/x/typex/testdata.UncomparableStruct",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    false,
				Key:           "nil",
				Elem:          "nil",
				NumField:      1,
				Fields: []FieldAssertion{
					{
						PkgPath: "github.com/xoctopus/x/typex/testdata",
						Name:    "v",
						Type:    "map[string]interface {}",
					},
				},
			},
		},
		{
			"UncomparableStructPtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.UncomparableStruct",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.UncomparableStruct",
			},
		},
		{
			"UnameStruct",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "struct { github.com/xoctopus/x/typex/testdata.Int }",
				Kind:          reflect.Struct,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      1,
				Fields: []FieldAssertion{
					{
						PkgPath:   "",
						Name:      "Int",
						Type:      "github.com/xoctopus/x/typex/testdata.Int",
						Anonymous: true,
					},
				},
			},
		},
		{
			"UnameStructPtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*struct { github.com/xoctopus/x/typex/testdata.Int }",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "struct { github.com/xoctopus/x/typex/testdata.Int }",
			},
		},
		{
			"ValuerString",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "Valuer[string]",
				String:        "github.com/xoctopus/x/typex/testdata.Valuer[string]",
				Kind:          reflect.Struct,
				Implements:    []bool{true, false, true, false, false, false},
				AssignableTo:  []bool{true, false, true, false, false, false},
				ConvertibleTo: []bool{true, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "nil",
				NumField:      1,
				Fields: []FieldAssertion{
					{
						PkgPath: "github.com/xoctopus/x/typex/testdata",
						Name:    "v",
						Type:    "string",
					},
				},
				NumMethod: 1,
				Methods: []MethodAssertion{
					{
						Name: "String",
						Type: "func(github.com/xoctopus/x/typex/testdata.Valuer[string]) string",
					},
				},
			},
		},
		{
			"ValuerStringPtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.Valuer[string]",
				Kind:          reflect.Pointer,
				Implements:    []bool{true, false, true, false, false, false},
				AssignableTo:  []bool{true, false, true, false, false, false},
				ConvertibleTo: []bool{true, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.Valuer[string]",
				NumMethod:     1,
				Methods: []MethodAssertion{
					{
						Name: "String",
						Type: "func(*github.com/xoctopus/x/typex/testdata.Valuer[string]) string",
					},
				},
			},
		},
		{
			"MapBTreeNodeInt",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "MapBTreeNode[int]",
				String:        "github.com/xoctopus/x/typex/testdata.MapBTreeNode[int]",
				Kind:          reflect.Map,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    false,
				Key:           "int",
				Elem:          "*github.com/xoctopus/x/typex/testdata.BTreeNode[int]",
			},
		},
		{
			"MapBTreeNodeIntPtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.MapBTreeNode[int]",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.MapBTreeNode[int]",
			},
		},
		{
			"TypedSliceAlias",
			&CaseAssertion{
				PkgPath:       "github.com/xoctopus/x/typex/testdata",
				Name:          "TypedSlice[net.Addr]",
				String:        "github.com/xoctopus/x/typex/testdata.TypedSlice[net.Addr]",
				Kind:          reflect.Slice,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    false,
				Key:           "nil",
				Elem:          "net.Addr",
				NumMethod:     1,
				Methods: []MethodAssertion{
					{
						Name: "Len",
						Type: "func(github.com/xoctopus/x/typex/testdata.TypedSlice[net.Addr]) int",
					},
				},
			},
		},
		{
			"TypedSliceAliasPtr",
			&CaseAssertion{
				PkgPath:       "",
				Name:          "",
				String:        "*github.com/xoctopus/x/typex/testdata.TypedSlice[net.Addr]",
				Kind:          reflect.Pointer,
				Implements:    []bool{false, false, true, false, false, false},
				AssignableTo:  []bool{false, false, true, false, false, false},
				ConvertibleTo: []bool{false, false, true, false, false, false},
				Comparable:    true,
				Key:           "nil",
				Elem:          "github.com/xoctopus/x/typex/testdata.TypedSlice[net.Addr]",
				NumMethod:     1,
				Methods: []MethodAssertion{
					{
						Name: "Len",
						Type: "func(*github.com/xoctopus/x/typex/testdata.TypedSlice[net.Addr]) int",
					},
				},
			},
		},
	}

	RunCase(t, cases, testdata.StructureCases)
}
